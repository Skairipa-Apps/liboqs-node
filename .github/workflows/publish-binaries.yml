name: Build and Publish Binaries

on:
  release:
    types: [published]

jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            arch: x64
            target: linux
            cross: false
          - os: ubuntu-latest
            arch: ia32
            target: linux
            cross: false
          - os: ubuntu-latest
            arch: arm64
            target: linux
            cross: true
          - os: ubuntu-latest
            arch: arm
            target: linux
            cross: true

          # Windows builds
          - os: windows-latest
            arch: x64
            target: win
            cross: false
          - os: windows-latest
            arch: ia32
            target: win
            cross: false
          - os: ubuntu-latest
            arch: arm64
            target: win
            cross: true

          # macOS builds
          - os: macos-latest
            arch: x64
            target: mac
            cross: false
          - os: macos-latest
            arch: arm64
            target: mac
            cross: false

    env:
      npm_config_arch: ${{ matrix.arch }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install build tools (macOS)
        if: runner.os == 'macOS'
        run: |
          xcode-select --install || echo "Xcode CLI tools already installed"
          brew update
          brew install ninja cmake

      - name: Install build tools (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libc6-dev libc6-dev-i386 ninja-build cmake curl

      - name: Install Zig for cross-compilation
        if: ${{ matrix.cross }}
        run: |
          curl -L -o zig.tar.xz https://ziglang.org/download/0.11.0/zig-linux-x86_64-0.11.0.tar.xz
          tar xf zig.tar.xz
          echo "$PWD/zig-linux-x86_64-0.11.0" >> $GITHUB_PATH
          echo "ZIG_PATH=$PWD/zig-linux-x86_64-0.11.0" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          npm install

      - name: Build for ${{ matrix.os }} ${{ matrix.arch }}
        run: |
          if [[ "${{ matrix.cross }}" == "true" ]]; then
            # Use Zig + musl for cross-compilation (safer than glibc)
            if [[ "${{ matrix.target }}" == "win" ]]; then
              CC="zig cc -target $([[ "${{ matrix.arch }}" == "arm64" ]] && echo aarch64-windows || echo i386-windows)" \
              CXX="zig c++ -target $([[ "${{ matrix.arch }}" == "arm64" ]] && echo aarch64-windows || echo i386-windows)" \
              npm run build:package
            else
              CC="zig cc -target $([[ "${{ matrix.arch }}" == "arm64" ]] && echo aarch64-linux-musl || echo arm-linux-musleabihf)" \
              CXX="zig c++ -target $([[ "${{ matrix.arch }}" == "arm64" ]] && echo aarch64-linux-musl || echo arm-linux-musleabihf)" \
              npm run build:package
            fi
          else
            npm run build:package
          fi

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

